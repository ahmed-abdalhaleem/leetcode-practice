// https://leetcode.com/problems/3sum/

vector<vector<int>> threeSum(vector<int>& nums) {
    
    vector<vector<int>> res{};
    
    sort(nums.begin(), nums.end()); // n.log(n) time
    
    for(int i = 0; i<nums.size()-2; i++){ // n^2 time
    
        if(i > 0 && nums[i] == nums[i-1])
            continue;
        
        int l = i+1, r = nums.size()-1, t = -nums[i];
        
        while(l<r){
            
            if(nums[l]+nums[r] == t){
                res.push_back(vector<int> {nums[i], nums[l], nums[r]});
                l++, r--;
                while(l<r && nums[l]==nums[l-1]) l++;
                while(r>l && nums[r]==nums[r+1]) r--;
            }
            else if(nums[l]+nums[r] < t)
                l++;
            else
                r--;
        }
        
    }
    
    return res;
}
